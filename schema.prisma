generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           Int           @id @default(autoincrement())
  name         String
  email        String
  phone        String
  address      String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Transactions Transaction[]
}

model Provider {
  id          Int       @id @default(autoincrement())
  name        String
  contactName String
  email       String
  phone       String
  address     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Products    Product[]
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String
  description      String
  price            Float
  providerId       Int
  provider         Provider          @relation(fields: [providerId], references: [id])
  TransactionItems TransactionItem[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model Transaction {
  id              Int               @id @default(autoincrement())
  customerId      Int
  customer        Customer          @relation(fields: [customerId], references: [id])
  transactionDate DateTime
  type            String
  status          String
  totalAmount     Float
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Items           TransactionItem[]
  Invoice         Invoice?
}

model TransactionItem {
  id            Int         @id @default(autoincrement())
  transactionId Int
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  productId     Int
  product       Product     @relation(fields: [productId], references: [id])
  quantity      Int
  unitPrice     Float
  totalPrice    Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Invoice {
  id            Int         @id @default(autoincrement())
  transactionId Int         @unique
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  invoiceDate   DateTime
  totalAmount   Float
  status        String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  Payment       Payment?
}

model Payment {
  id            Int      @id @default(autoincrement())
  invoiceId     Int      @unique
  invoice       Invoice  @relation(fields: [invoiceId], references: [id])
  paymentDate   DateTime
  amount        Float
  paymentMethod String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
